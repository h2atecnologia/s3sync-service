---
# Source: s3sync-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: s3sync-service-kube-system-serviceaccount
  namespace: kube-system
---
# Source: s3sync-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: s3sync-service-kube-system
  name: s3sync-service-kube-system-configmap
  namespace: kube-system
data:
  config.yml: |-
    aws_region: us-east-1
    loglevel: info
    upload_queue_buffer: 0
    upload_workers: 10
    checksum_workers: 5
    watch_interval: 1s
    s3_ops_retries: 5
    sites:
    {}
---
# Source: s3sync-service/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: s3sync-service-kube-system-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
# Source: s3sync-service/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: s3sync-service-kube-system-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: s3sync-service-kube-system-clusterrole
subjects:
  - kind: ServiceAccount
    name: s3sync-service-kube-system-serviceaccount
    namespace: kube-system
---
# Source: s3sync-service/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: s3sync-service-kube-system-role
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "s3sync-service-kube-system-configmap"
    verbs:
      - get
      - watch
---
# Source: s3sync-service/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: s3sync-service-kube-system-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: s3sync-service-kube-system-role
subjects:
  - kind: ServiceAccount
    name: s3sync-service-kube-system-serviceaccount
    namespace: kube-system
---
# Source: s3sync-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3sync-service-kube-system
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3sync-service-kube-system
  template:
    metadata:
      labels:
        app: s3sync-service-kube-system
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9350"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: s3sync-service-kube-system-serviceaccount
      containers:
      - name: s3sync-service-kube-system
        image: zmazay/s3sync-service:0.1.0
        imagePullPolicy: IfNotPresent
        command:
        - "./s3sync-service"
        - "-configmap=kube-system/s3sync-service-kube-system-configmap"
        - "-metrics-path=/metrics"
        - "-metrics-port=9350"
        - "-http-port=8090"
      terminationGracePeriodSeconds: 300
